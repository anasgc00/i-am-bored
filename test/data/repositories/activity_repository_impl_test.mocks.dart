// Mocks generated by Mockito 5.3.2 from annotations
// in i_am_bored/test/data/repositories/activity_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:i_am_bored/core/network/network_info.dart' as _i8;
import 'package:i_am_bored/core/retrofit_client/api_client.dart' as _i2;
import 'package:i_am_bored/data/datasources/local_datasource.dart' as _i4;
import 'package:i_am_bored/data/datasources/remote_datasource.dart' as _i7;
import 'package:i_am_bored/data/models/activity_mode.dart' as _i3;
import 'package:i_am_bored/domain/entities/activity_entity.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiClient_0 extends _i1.SmartFake implements _i2.ApiClient {
  _FakeApiClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActivityModel_1 extends _i1.SmartFake implements _i3.ActivityModel {
  _FakeActivityModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ActivityLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockActivityLocalDataSource extends _i1.Mock
    implements _i4.ActivityLocalDataSource {
  MockActivityLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i6.Activity>> getSavedActivities() => (super.noSuchMethod(
        Invocation.method(
          #getSavedActivities,
          [],
        ),
        returnValue: _i5.Future<List<_i6.Activity>>.value(<_i6.Activity>[]),
      ) as _i5.Future<List<_i6.Activity>>);
  @override
  _i5.Future<void> inserActivity(_i3.ActivityModel? activity) =>
      (super.noSuchMethod(
        Invocation.method(
          #inserActivity,
          [activity],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> deleteSavedActivity(String? key) => (super.noSuchMethod(
        Invocation.method(
          #deleteSavedActivity,
          [key],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [ActivityRemoteDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockActivityRemoteDataSourceImpl extends _i1.Mock
    implements _i7.ActivityRemoteDataSourceImpl {
  MockActivityRemoteDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiClient get apiClient => (super.noSuchMethod(
        Invocation.getter(#apiClient),
        returnValue: _FakeApiClient_0(
          this,
          Invocation.getter(#apiClient),
        ),
      ) as _i2.ApiClient);
  @override
  _i5.Future<_i3.ActivityModel> getRandomActivity() => (super.noSuchMethod(
        Invocation.method(
          #getRandomActivity,
          [],
        ),
        returnValue: _i5.Future<_i3.ActivityModel>.value(_FakeActivityModel_1(
          this,
          Invocation.method(
            #getRandomActivity,
            [],
          ),
        )),
      ) as _i5.Future<_i3.ActivityModel>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i8.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
